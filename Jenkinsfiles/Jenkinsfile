node {    

    def image

    def GIT_COMMIT
    def PROJECT_NAME="http-service"


    stage('Clone repository') {               

        checkout scm 

        GIT_COMMIT = sh(script: 'git rev-list -1 HEAD', returnStdout: true)

    } 

    stage('Test') {


        docker.image('erizzardi/gomagit:latest').inside("-v ${WORKSPACE}/:/project") { // run unit tests in a container with go, make and git
            
            STATUS = sh(script: "make test", returnStatus: true)
        }

        if (STATUS != 0) {
            error("Unit tests failed! Aborting.")
        }
    }

    stage('Build image') {         
    
        image = docker.build("erizzardi/http-service:${BUILD_NUMBER}")
    }

    stage('Push image') {

        docker.withRegistry('https://registry.hub.docker.com/', 'docker-hub') {
        
            docker.build('erizzardi/http-service').push("${BUILD_NUMBER}")
        }
    }


}